<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/mvc
     					http://www.springframework.org/schema/mvc/spring-mvc.xsd
     					http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security.xsd" >
	
	<!-- allowing annotation driven configuration and then mapping the proper package to be mapped -->
	<context:annotation-config />
	<context:component-scan base-package="com.sample.restfulapi" />

	<!-- mandatory declaration in order get spring mvc working -->
	<mvc:annotation-driven/>
	<mvc:default-servlet-handler/>

	<!-- static resources are public, they don't require authentication -->
	<sec:http security="none" pattern="/"/>
	<sec:http security="none" pattern="/**.html"/>
	<sec:http security="none" pattern="/css/*"/>
	<sec:http security="none" pattern="/js/*"/>

	<!-- minimal required configurations for spring security -->
	<sec:http auto-config="true" >
		<sec:intercept-url pattern="/**" access="authenticated"/>
		<sec:http-basic entry-point-ref="customBasicAuthenticationEntryPoint"/>
		<sec:csrf token-repository-ref="customCookieCsrf"/>
	</sec:http>
	
	<!-- 
	If you start with a clean browser (e.g. incognito in Chrome), the very first 
	request has no cookies going off to the server, but the server sends back 
	"Set-Cookie" for "JSESSIONID" (the regular HttpSession) and "X-XSRF-TOKEN" 
	(the CRSF cookie that we set up above). Subsequent requests all have those cookies
	, and they are important: the application doesnâ€™t work without them, and they 
	are providing some really basic security features (authentication and CSRF protection). 
	The values of the cookies change when the user authenticates (after the POST) and 
	this is another important security feature (preventing session fixation attacks).
	 -->
	<bean id="customCookieCsrf" class="org.springframework.security.web.csrf.CookieCsrfTokenRepository" factory-method="withHttpOnlyFalse">
	</bean>
	
	<!-- 
	Spring Security responds to it by not sending a "WWW-Authenticate" header in a 401 response,
	and thus the browser will not pop up an authentication dialog
	 -->
	<bean id="customBasicAuthenticationEntryPoint" class="com.sample.restfulapi.security.CustomBasicAuthenticationEntryPoint">
		<constructor-arg value="RealmName"></constructor-arg>
	</bean>
	
	<!-- setting a sample/fake user for login purpose -->
	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:user-service>
				<sec:user name="bob" password="123456" authorities="ROLE_USER"/>
			</sec:user-service>
		</sec:authentication-provider>
	</sec:authentication-manager>

</beans>